{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { memo, useCallback, useEffect, useMemo, useRef } from 'react';\nimport {\n  FieldGroup,\n  FieldArray,\n  FieldControl,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  FormArray,\n  ValidationErrors,\n  InputType,\n  Handler,\n  ValidatorFn as Validator,\n  AsyncValidatorFn as AsyncValidator,\n} from 'react-reactive-form';\n\nexport interface FieldConfig {\n  defaultValue?: any;\n  control?: string;\n  modelOptions?: {\n    updateOn: 'change' | 'blur' | 'submit';\n  };\n  key?: string;\n  type?: string;\n  props?: {\n    [key: string]: any;\n  };\n  fieldGroup?: FieldConfig[];\n  fieldArray?: FieldConfig;\n  hide?: boolean;\n  expressions?: {\n    [key: string]: string;\n  };\n  wrappers?: string[];\n}\n\nconst getDefaultModelFromConfig = (config: any[]): any => {\n  return config.reduce((acc, el) => {\n    if (!el.key && el.fieldGroup && !el.fieldArray) {\n      const modelFromParent = el.defaultValue || {};\n\n      const modelFromChildren = getDefaultModelFromConfig(el.fieldGroup);\n\n      return { ...acc, ...modelFromParent, ...modelFromChildren };\n    }\n\n    if (el.key && 'defaultValue' in el && !el.fieldGroup && !el.fieldArray) {\n      return { ...acc, [el.key]: el.defaultValue };\n    }\n\n    if (el.key && el.fieldGroup && !el.fieldArray) {\n      const modelFromParent = el.defaultValue || {};\n\n      const modelFromChildren = getDefaultModelFromConfig(el.fieldGroup);\n\n      return { ...acc, [el.key]: { ...modelFromParent, ...modelFromChildren } };\n    }\n\n    if (el.key && el.fieldArray) {\n      const modelFromParent: any[] = el.defaultValue || [];\n\n      const modelFromChildren = getDefaultModelFromConfig([el.fieldArray]);\n\n      return { ...acc, [el.key]: modelFromParent.map((el) => ({ ...el, ...modelFromChildren })) };\n    }\n\n    return acc;\n  }, {});\n};\n\nexport type WrapperFn = (input: {\n  control: FormGroup | FormControl | FormArray;\n  config: any;\n  formState: React.MutableRefObject<{ [key: string]: any }>;\n  model: React.MutableRefObject<{ [key: string]: any }>;\n  submit: () => void;\n  children: JSX.Element;\n}) => JSX.Element;\n\nexport type ControlFn = (input: {\n  control: FormGroup | FormControl | FormArray;\n  config: any;\n  formState: React.MutableRefObject<{ [key: string]: any }>;\n  model: React.MutableRefObject<{ [key: string]: any }>;\n  submit: () => void;\n  children?: JSX.Element;\n}) => JSX.Element;\n\nexport type TypeFn = (input: {\n  handler:\n    | ((inputType?: InputType | undefined, value?: string | undefined) => Handler)\n    | ((inputType?: InputType | undefined, value?: string | undefined) => Handler);\n  control: FormGroup | FormControl | FormArray;\n  field: FormGroup | FormControl | FormArray;\n  config: any;\n  formState: React.MutableRefObject<{ [key: string]: any }>;\n  model: React.MutableRefObject<{ [key: string]: any }>;\n  submit: () => void;\n  children?: JSX.Element;\n}) => JSX.Element;\n\nexport type ValidatorFn = Validator;\nexport type AsyncValidatorFn = AsyncValidator;\n\nconst allWrappers: { [key: string]: WrapperFn } = {};\nconst allControls: { [key: string]: ControlFn } = {};\nconst allValidators: { [key: string]: ValidatorFn } = {};\nconst allAsyncValidators: { [key: string]: AsyncValidatorFn } = {};\nconst allTypes: { [key: string]: TypeFn } = {};\n\nexport const DynamicView = {\n  registerWrappers: (wrappers: { name: string; component: WrapperFn }[]) => {\n    wrappers.forEach(({ name, component }) => {\n      if (allWrappers[name]) {\n        throw new Error(`You already registered \"${name}\" Wrapper!`);\n      }\n\n      allWrappers[name] = component;\n    });\n  },\n  registerControls: (controls: { name: string; component: ControlFn }[]) => {\n    controls.forEach(({ name, component }) => {\n      if (allControls[name]) {\n        throw new Error(`You already registered \"${name}\" Control!`);\n      }\n\n      allControls[name] = component;\n    });\n  },\n  registerTypes: (types: { name: string; component: TypeFn }[]) => {\n    types.forEach(({ name, component }) => {\n      if (allTypes[name]) {\n        throw new Error(`You already registered \"${name}\" Type!`);\n      }\n\n      allTypes[name] = component;\n    });\n  },\n  registerValidators: (validators: { name: string; component: ValidatorFn }[]) => {\n    validators.forEach(({ name, component }) => {\n      if (allValidators[name]) {\n        throw new Error(`You already registered \"${name}\" Validator!`);\n      }\n\n      allValidators[name] = component;\n    });\n  },\n  registerAsyncValidators: (asyncValidators: { name: string; component: AsyncValidatorFn }[]) => {\n    asyncValidators.forEach(({ name, component }) => {\n      if (allAsyncValidators[name]) {\n        throw new Error(`You already registered \"${name}\" AsyncValidator!`);\n      }\n\n      allAsyncValidators[name] = component;\n    });\n  },\n};\n\nconst RenderWrappers = memo(\n  ({ control, config, wrappers = config.wrappers || [], formState, model, children, submit }: any) =>\n    wrappers.reduce((acc: any, wrapper: any) => {\n      const Wrapper = allWrappers[wrapper];\n\n      if (!Wrapper) {\n        throw new Error(`Wrapper \"${wrapper}\" was not regitered!`);\n      }\n\n      return (\n        <Wrapper control={control} config={config} formState={formState} model={model} submit={submit}>\n          {acc}\n        </Wrapper>\n      );\n    }, children),\n);\n\nconst getValidatorsByConfig = (config: any) =>\n  (config.validators || []).map((validator: string) => {\n    if (!allValidators[validator]) {\n      throw new Error(`Validator \"${validator}\" was not regitered!`);\n    }\n    return allValidators[validator];\n  });\n\nconst getAsyncValidatorsByConfig = (config: any) =>\n  (config.asyncValidators || []).map((asyncValidator: string) => {\n    if (!allAsyncValidators[asyncValidator]) {\n      throw new Error(`AsyncValidator \"${asyncValidator}\" was not regitered!`);\n    }\n    return allAsyncValidators[asyncValidator];\n  });\n\nconst updateObjectByPath = (object: any, path: any[], value: any) => {\n  path.reduce((acc, el, index) => {\n    if (index === path.length - 1) {\n      acc[el] = value;\n    }\n\n    return acc[el];\n  }, object);\n\n  return { ...object };\n};\n\nconst getValueByPath = (object: any, path: any) => path.reduce((acc: any, el: any) => acc[el], object);\n\nconst setModelByPath = (localModelRef: any, path: any[], value: any) => {\n  localModelRef.current = updateObjectByPath(localModelRef.current, path, value);\n};\n\nconst createChildControl = (config: any, model: any) => {\n  const validators = getValidatorsByConfig(config);\n  const asyncValidators = getAsyncValidatorsByConfig(config);\n  const updateOn = config.modelOptions?.updateOn || 'change';\n\n  if (config.fieldArray) {\n    return new FormArray([], { validators, asyncValidators, updateOn });\n  }\n  if (config.fieldGroup) {\n    return new FormGroup({}, { validators, asyncValidators, updateOn });\n  }\n  return new FormControl(model ?? config.defaultValue, { validators, asyncValidators, updateOn });\n};\n\nconst UpdateModelWithControlValueComponent = ({ model, control, path, children, debounce }: any) => {\n  useEffect(() => {\n    control.valueChanges.subscribe((value: any) => {\n      if (getValueByPath(model.current, path) !== value) {\n        setModelByPath(model, path, value);\n      }\n    });\n\n    return () => {\n      control.valueChanges.unsubscribe();\n    };\n  }, [model]);\n\n  return <>{children}</>;\n};\n\nconst runExpressions = (config: any, fieldState: any, model: any, formState: any, field: any) => {\n  const _ = { model, fieldState, formState, field };\n\n  if (!config.expressions) {\n    return config;\n  }\n\n  return Object.entries(config.expressions).reduce(\n    (acc, [key, expression]) => {\n      const path = key.split('.');\n\n      try {\n        return updateObjectByPath(acc, path, eval(expression as string));\n      } catch (e) {\n        console.error(e);\n        return acc;\n      }\n    },\n    { ...config },\n  );\n};\n\nfunction areEqual(prevProps: any, nextProps: any) {\n  return (\n    prevProps.modelData === nextProps.modelData &&\n    JSON.stringify(prevProps.formState) === JSON.stringify(nextProps.formState) &&\n    prevProps.control.valid === nextProps.control.valid &&\n    JSON.stringify(prevProps.control.errors) === JSON.stringify(nextProps.control.errors) &&\n    prevProps.control.touched === nextProps.control.touched &&\n    JSON.stringify(prevProps.config) === JSON.stringify(nextProps.config) &&\n    prevProps.dirty === nextProps.dirty\n  );\n}\n\nconst FieldResolver = memo(({ config: oldConfig, model, formState, control, path, submit }: any) => {\n  const config = runExpressions(\n    oldConfig,\n    getValueByPath(model.current, path),\n    model.current,\n    formState.current,\n    control,\n  );\n\n  if (config.hide) {\n    return <></>;\n  }\n\n  if (config.control) {\n    if (!allControls[config.control]) {\n      throw new Error(`Control \"${config.control}\" was not regitered!`);\n    }\n\n    const Control = allControls[config.control];\n\n    return (\n      <RenderWrappers control={control} model={model} config={config} formState={formState} submit={submit}>\n        <Control control={control} model={model} config={config} formState={formState} submit={submit} />\n      </RenderWrappers>\n    );\n  }\n\n  if (!config.key && config.fieldGroup) {\n    return (\n      <RenderWrappers control={control} model={model} config={config} formState={formState} submit={submit}>\n        {config.fieldGroup.map((config: any, i: number) => {\n          let childControl = control;\n\n          if (config.key && !control.get(config.key)) {\n            childControl = createChildControl(config, getValueByPath(model.current, [...path, config.key]));\n            control.addControl(config.key, childControl);\n          }\n\n          if (config.key && control.get(config.key)) {\n            childControl = control.get(config.key);\n          }\n\n          const updatedConfig = runExpressions(\n            config,\n            getValueByPath(model.current, config.key ? [...path, config.key] : path),\n            model.current,\n            formState.current,\n            childControl,\n          );\n\n          if (updatedConfig.hide) {\n            return <></>;\n          }\n\n          return (\n            <RenderWrappers\n              control={childControl}\n              key={i}\n              model={model}\n              config={updatedConfig}\n              formState={formState}\n              submit={submit}\n            >\n              <FieldResolver\n                config={updatedConfig}\n                formState={formState}\n                model={model}\n                modelData={JSON.stringify(\n                  getValueByPath(model.current, updatedConfig.key ? [...path, updatedConfig.key] : path),\n                )}\n                control={childControl}\n                path={updatedConfig.key ? [...path, updatedConfig.key] : path}\n                submit={submit}\n              />\n            </RenderWrappers>\n          );\n        })}\n      </RenderWrappers>\n    );\n  }\n\n  if (config.key && !config.fieldGroup && !config.fieldArray) {\n    if (getValueByPath(model.current, path) !== undefined && getValueByPath(model.current, path) !== control.value) {\n      control.setValue(getValueByPath(model.current, path));\n    }\n\n    if (!allTypes[config.type]) {\n      throw new Error(`Type \"${config.type}\" was not regitered!`);\n    }\n\n    const Type = allTypes[config.type];\n\n    const updatedConfig = runExpressions(\n      config,\n      getValueByPath(model.current, path),\n      model.current,\n      formState.current,\n      control,\n    );\n\n    if (updatedConfig.hide) {\n      return <></>;\n    }\n\n    return (\n      <RenderWrappers control={control} model={model} config={updatedConfig} formState={formState} submit={submit}>\n        <FieldControl\n          name={updatedConfig.key}\n          options={{\n            validators: getValidatorsByConfig(updatedConfig),\n            asyncValidators: getAsyncValidatorsByConfig(updatedConfig),\n          }}\n          meta={{ config: updatedConfig, formState, model, fieldState: getValueByPath(model.current, path) }}\n          render={({ handler, meta, ...rest }) => (\n            <UpdateModelWithControlValueComponent\n              debounce={meta.config.modelOptions?.debounce}\n              model={model}\n              control={control}\n              path={path}\n              setModelByPath={setModelByPath}\n            >\n              <Type {...(meta as any)} handler={handler} field={{ ...rest } as any} />\n            </UpdateModelWithControlValueComponent>\n          )}\n        />\n      </RenderWrappers>\n    );\n  }\n\n  if (config.key && config.fieldArray) {\n    if (!allTypes[config.type]) {\n      throw new Error(`Type \"${config.type}\" was not regitered!`);\n    }\n\n    const Type = allTypes[config.type];\n\n    if (control.value.length > getValueByPath(model.current, path).length) {\n      [...new Array(control.value.length - getValueByPath(model.current, path).length)].forEach(() => {\n        control.removeAt(control.value.length - 1);\n      });\n    }\n\n    if (control.value.length < getValueByPath(model.current, path).length) {\n      [...new Array(getValueByPath(model.current, path).length - control.value.length)].forEach((_, i) => {\n        let childControl = createChildControl(\n          config.fieldArray,\n          getValueByPath(model.current, path)[control.value.length + i],\n        );\n\n        control.push(childControl);\n      });\n    }\n\n    const add = (beforeIndex?: number) => {\n      if (beforeIndex === undefined || typeof beforeIndex !== 'number') {\n        setModelByPath(\n          model,\n          [...path, control.controls.length],\n          getDefaultModelFromConfig(config.fieldArray.fieldGroup || []),\n        );\n        control.push(createChildControl(config.fieldArray, undefined));\n      } else {\n        setModelByPath(model, path, [\n          ...getValueByPath(model.current, path).slice(0, beforeIndex),\n          getDefaultModelFromConfig(config.fieldArray.fieldGroup || []),\n          ...getValueByPath(model.current, path).slice(beforeIndex),\n        ]);\n        control.insert(beforeIndex, createChildControl(config.fieldArray, undefined));\n      }\n    };\n\n    const remove = (index?: number) => {\n      if (!control.controls.length) {\n        return;\n      }\n\n      const indexToRemove = index !== undefined && typeof index === 'number' ? index : control.controls.length - 1;\n\n      setModelByPath(model, path, [\n        ...getValueByPath(model.current, path).slice(0, indexToRemove),\n        ...getValueByPath(model.current, path).slice(indexToRemove + 1),\n      ]);\n      control.removeAt(indexToRemove);\n    };\n\n    return (\n      <RenderWrappers control={control} model={model} config={config} formState={formState} submit={submit}>\n        <FieldArray\n          control={control}\n          name={config.key}\n          meta={{\n            config,\n            path,\n            control,\n            formState,\n            model,\n            fieldState: getValueByPath(model.current, path),\n            add,\n            remove,\n          }}\n          render={({ handler, meta: { control, path, ...meta }, ...rest }) => (\n            <UpdateModelWithControlValueComponent\n              debounce={meta.config.modelOptions?.debounce}\n              model={meta.model}\n              control={control}\n              path={path}\n              setModelByPath={setModelByPath}\n            >\n              <Type {...(meta as any)} handler={handler} field={{ ...rest } as any}>\n                <>\n                  {(getValueByPath(model.current, path) || []).map((_: any, i: number) => {\n                    const updatedConfig = runExpressions(\n                      meta.config,\n                      getValueByPath(model.current, [...path, i]),\n                      model.current,\n                      formState.current,\n                      control,\n                    );\n\n                    if (updatedConfig.hide) {\n                      return (\n                        <RenderWrappers\n                          key={i}\n                          control={control.at(i)}\n                          model={model}\n                          config={updatedConfig.fieldArray}\n                          formState={formState}\n                          submit={submit}\n                        ></RenderWrappers>\n                      );\n                    }\n\n                    return (\n                      <RenderWrappers\n                        key={i}\n                        control={control.at(i)}\n                        model={model}\n                        config={updatedConfig.fieldArray}\n                        formState={formState}\n                        submit={submit}\n                      >\n                        <FieldGroup\n                          control={control.at(i)}\n                          meta={{\n                            config: updatedConfig,\n                            formState,\n                            model,\n                            fieldState: getValueByPath(model.current, [...path, i]),\n                          }}\n                          render={() => (\n                            <FieldResolver\n                              config={{ fieldGroup: meta.config.fieldArray.fieldGroup || meta.config.fieldArray }}\n                              model={model}\n                              modelData={JSON.stringify(getValueByPath(model.current, [...path, i]))}\n                              formState={formState}\n                              control={control.at(i)}\n                              path={[...path, i]}\n                              submit={submit}\n                            />\n                          )}\n                        />\n                      </RenderWrappers>\n                    );\n                  })}\n                </>\n              </Type>\n            </UpdateModelWithControlValueComponent>\n          )}\n        />\n      </RenderWrappers>\n    );\n  }\n\n  if (config.key && config.fieldGroup) {\n    if (!allTypes[config.type]) {\n      throw new Error(`Type \"${config.type}\" was not regitered!`);\n    }\n\n    const Type = allTypes[config.type];\n\n    const updatedConfig = runExpressions(\n      config,\n      getValueByPath(model.current, path),\n      model.current,\n      formState.current,\n      control,\n    );\n\n    if (updatedConfig.hide) {\n      return <></>;\n    }\n\n    return (\n      <RenderWrappers control={control} model={model} config={updatedConfig} formState={formState} submit={submit}>\n        <FieldGroup\n          control={control}\n          meta={{ config: updatedConfig, formState, model, fieldState: getValueByPath(model.current, path) }}\n          render={({ handler, meta, ...rest }) => (\n            <UpdateModelWithControlValueComponent\n              debounce={meta.config.modelOptions?.debounce}\n              model={model}\n              control={control}\n              path={path}\n              setModelByPath={setModelByPath}\n            >\n              <Type {...(meta as any)} handler={handler} field={{ ...rest } as any}>\n                <FieldResolver\n                  config={{ fieldGroup: meta.config.fieldGroup }}\n                  model={model}\n                  modelData={JSON.stringify(getValueByPath(model.current, path))}\n                  formState={formState}\n                  control={control}\n                  path={path}\n                  submit={submit}\n                />\n              </Type>\n            </UpdateModelWithControlValueComponent>\n          )}\n        />\n      </RenderWrappers>\n    );\n  }\n\n  return <></>;\n}, areEqual);\n\nconst useSmartRef = (data: any) => {\n  const ref = useRef(data);\n\n  useMemo(() => {\n    if (JSON.stringify(ref.current) === JSON.stringify(data)) {\n      ref.current = data;\n    }\n  }, [data]);\n\n  return ref;\n};\n\nconst useObjectChange = (onChangeCallback: (_: any) => void, defaultValue: any = null) => {\n  const ref = useRef(defaultValue);\n\n  const next = useCallback(\n    (value: any) => {\n      if (JSON.stringify(value) === JSON.stringify(ref.current)) {\n        onChangeCallback(value);\n      }\n      ref.current = value;\n    },\n    [onChangeCallback],\n  );\n\n  return next;\n};\n\ninterface CallbackInput {\n  model: { [key: string]: any };\n  formState: { [key: string]: any };\n  valid: boolean;\n  errors: ValidationErrors;\n}\n\nexport const DynamicViewComponent = ({\n  fields,\n  model: modelInput,\n  formState: formStateInput = {},\n  onSubmit = () => {},\n  onChange = () => {},\n  withForm = false,\n}: {\n  fields: FieldConfig[];\n  model: { [key: string]: any };\n  formState?: { [key: string]: any };\n  onSubmit?: (_: CallbackInput) => void;\n  onChange?: (_: CallbackInput) => void;\n  withForm?: boolean;\n}) => {\n  const formControl = useMemo(() => FormBuilder.group({}), []);\n  const defaultModel = useMemo(() => getDefaultModelFromConfig(fields), [fields]);\n  const config = useMemo(() => ({ fieldGroup: fields }), [fields]);\n  const model = useSmartRef({ ...defaultModel, ...modelInput });\n  const formState = useSmartRef(formStateInput);\n  const next = useObjectChange(onChange, {\n    model: model.current,\n    formState: formState.current,\n    valid: formControl.valid,\n    errors: formControl.errors,\n  });\n\n  useMemo(() => formControl.updateValueAndValidity(), [config]);\n\n  const submit = useCallback(\n    () =>\n      onSubmit({\n        model: model.current,\n        formState: formState.current,\n        valid: formControl.valid,\n        errors: formControl.errors,\n      }),\n    [onSubmit],\n  );\n\n  return (\n    <FieldGroup\n      control={formControl}\n      meta={{ withForm, formControl, formState, submit, model, next, config }}\n      render={({ meta: { withForm, submit, formControl, model, formState, next, config } }) => {\n        next({\n          model: model.current,\n          formState: formState.current,\n          valid: formControl.valid,\n          errors: formControl.errors,\n        });\n\n        const field = (\n          <FieldResolver\n            control={formControl}\n            config={config}\n            model={model}\n            modelData={JSON.stringify(model.current)}\n            formState={formState}\n            path={[]}\n            submit={submit}\n          />\n        );\n\n        return withForm ? <form onSubmit={(e) => e.preventDefault()}> {field} </form> : field;\n      }}\n    />\n  );\n};\n"]}